- id: '1618666809324'
  alias: Interagration - Aspirateur - Auto
  description: ''
  trigger:
  - platform: time
    at: '12:00'
  condition:
  - condition: state
    entity_id: input_boolean.away_mode
    state: 'on'
  action:
  - service: vacuum.start
    data: {}
    target:
      entity_id: vacuum.roborock_s7
  - service: notify.mobile_seb
    data:
      message: Roomba - Lancement auto
  mode: single
- id: '1725884405348'
  alias: NSPanel Config
  description: ''
  use_blueprint:
    path: Blackymas/nspanel_blueprint.yaml
    input:
      nspanel_name: 6f2b4d45bf3e9b33b82df452528798ad
      language: fr
      date_format: '%A, %d/%m'
      timezone: Europe/Paris (CET-1CEST,M3.5.0,M10.5.0/3)
      decimal_separator: ','
      weather_entity: weather.petit_mars
      home_custom_button01: input_boolean.night_mode
      home_custom_button01_icon: mdi:weather-night
      home_custom_button01_name: Mode nuit
      home_custom_button02: input_boolean.away_mode
      home_custom_button02_icon: mdi:home-export-outline
      home_custom_button02_name: Mode absence
      entity01: input_boolean.away_mode
      entity01_name: Mobe absence
      entity01_icon: mdi:home-import-outline
      entity01_confirm: true
      entity02: input_boolean.night_mode
      entity02_name: Mode nuit
      entity02_icon: mdi:weather-night
- id: '1750497269445'
  alias: Face detection from Unifi
  description: Met à jour des device_tracker pour chaque visage détecté
  triggers:
  - webhook_id: unifi_face_detection
    allowed_methods:
    - POST
    local_only: false
    trigger: webhook
  actions:
  - variables:
      device_id: "{% if trigger.json is defined and trigger.json.alarm.sources %}\n
        \ {{ trigger.json.alarm.sources[0].device }}\n{% else %}\n  unknown\n{% endif
        %}\n"
      face_names: "{% if trigger.json is defined and trigger.json.alarm.triggers %}\n
        \ {% set faces = trigger.json.alarm.triggers | selectattr('key', 'equalto',
        'face_of_interest') | map(attribute='value') | list %}\n  {{ faces | tojson
        }}\n{% else %}\n  []\n{% endif %}\n"
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ face_names | length > 0 }}'
      sequence:
      - repeat:
          for_each: '{{ face_names }}'
          sequence:
          - variables:
              face_name: '{{ repeat.item }}'
              face_id: "{% from 'util.jinja' import strip_accents %}\n{{ strip_accents(repeat.item)\n
                \ | regex_replace('[^a-z0-9]', '_')\n  | regex_replace('_+', '_')\n
                \ | trim('_')\n}}\n"
          - data:
              dev_id: unifi_face_{{ face_id }}
              host_name: '{{ face_name }}'
              location_name: home
            action: device_tracker.see
  variables:
    device_id: "{% if trigger.json is defined and trigger.json.alarm.sources %}\n
      \ {{ trigger.json.alarm.sources[0].device }}\n{% else %}\n  inconnu\n{% endif
      %}\n"
    face_names: "{% if trigger.json is defined and trigger.json.alarm.triggers %}\n
      \ {% set faces = trigger.json.alarm.triggers\n    | selectattr('key', 'equalto',
      'face_of_interest')\n    | map(attribute='value') | list %}\n  {{ faces }}\n{%
      else %}\n  []\n{% endif %}\n"
  mode: parallel
