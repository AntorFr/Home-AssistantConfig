automation:
###############################################
- id: 'integration_unifi_face_detection'
  alias: Face detection from Unifi
  description: Met à jour des device_tracker pour chaque visage détecté
  triggers:
  - webhook_id: unifi_face_detection
    allowed_methods:
    - POST
    local_only: false
    trigger: webhook
  actions:
  - variables:
      device_id: "{% if trigger.json is defined and trigger.json.alarm.sources %}\n
        \ {{ trigger.json.alarm.sources[0].device }}\n{% else %}\n  unknown\n{% endif
        %}\n"
      face_names: "{% if trigger.json is defined and trigger.json.alarm.triggers %}\n
        \ {% set faces = trigger.json.alarm.triggers | selectattr('key', 'equalto',
        'face_of_interest') | map(attribute='value') | list %}\n  {{ faces | tojson
        }}\n{% else %}\n  []\n{% endif %}\n"
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ face_names | length > 0 }}'
      sequence:
      - repeat:
          for_each: '{{ face_names }}'
          sequence:
          - variables:
              face_name: '{{ repeat.item }}'
              face_id: "{% from 'util.jinja' import strip_accents %}\n{{ strip_accents(repeat.item)\n
                \ | regex_replace('[^a-z0-9]', '_')\n  | regex_replace('_+', '_')\n
                \ | trim('_')\n}}\n"
          - data:
              dev_id: unifi_face_{{ face_id }}
              host_name: '{{ face_name }}'
              location_name: home
            action: device_tracker.see
  variables:
    device_id: "{% if trigger.json is defined and trigger.json.alarm.sources %}\n
      \ {{ trigger.json.alarm.sources[0].device }}\n{% else %}\n  inconnu\n{% endif
      %}\n"
    face_names: "{% if trigger.json is defined and trigger.json.alarm.triggers %}\n
      \ {% set faces = trigger.json.alarm.triggers\n    | selectattr('key', 'equalto',
      'face_of_interest')\n    | map(attribute='value') | list %}\n  {{ faces }}\n{%
      else %}\n  []\n{% endif %}\n"
  mode: parallel
