mqtt:
  sensor: 
    - name: "Hub State"
      unique_id: "C7WUFfnAhubState"
      state_topic: "4bM5kNAf/C7WUFfnA/state"
      value_template: "{{ value_json.hubState | int }}"
      device: 
        name: "Ace 1500"
        identifiers: "FE1HTMCFM260498"
        manufacturer: "Zendure"
        model: "Ace 1500 Controller"
    - name: "Solar Input Power"
      unique_id: "C7WUFfnAsolarInputPower"
      state_topic: "4bM5kNAf/C7WUFfnA/state"
      unit_of_measurement: "W"
      device_class: "power"
      value_template: >
        {% if (value_json.electricLevel | is_defined) or (value_json.solarInputPower | is_defined) %}
          {{value_json.solarInputPower | d(0) | int }}
        {% endif %}
      state_class: "measurement"
      device: 
        name: "Ace 1500"
        identifiers: "FE1HTMCFM260498"
        manufacturer: "Zendure"
        model: "Ace 1500 Controller"
    - name: "Pack Input Power"
      unique_id: "C7WUFfnApackInputPower"
      state_topic: "4bM5kNAf/C7WUFfnA/state"
      unit_of_measurement: "W"
      device_class: "power"
      value_template: >
        {% if (value_json.electricLevel | is_defined) or (value_json.packInputPower | is_defined) %}
          {{value_json.packInputPower | d(0) | int }}
        {% endif %}
      state_class: "measurement"
      device: 
        name: "Ace 1500"
        identifiers: "FE1HTMCFM260498"
        manufacturer: "Zendure"
        model: "Ace 1500 Controller"
    - name: "Output Pack Power"
      unique_id: "C7WUFfnAoutputPackPower"
      state_topic: "4bM5kNAf/C7WUFfnA/state"
      unit_of_measurement: "W"
      device_class: "power"
      value_template: >
        {% if (value_json.electricLevel | is_defined) or (value_json.outputPackPower | is_defined)%}
          {{value_json.outputPackPower | d(0) | int }}
        {% endif %}
      state_class: "measurement"
      device: 
        name: "Ace 1500"
        identifiers: "FE1HTMCFM260498"
        manufacturer: "Zendure"
        model: "Ace 1500 Controller"
    - name: "Output Home Power"
      unique_id: "C7WUFfnAoutputHomePower"
      state_topic: "4bM5kNAf/C7WUFfnA/state"
      unit_of_measurement: "W"
      device_class: "power"
      value_template: >
        {% if states('sensor.ace_1500_output_home_power') not in ['unknown'] %} # Must be adapted to your entity name if necessary
          {{ int(value_json.outputHomePower, 0) }}
        {% else %}
          {{ int(0) }}
        {% endif %}
      state_class: "measurement"
      device: 
        name: "Ace 1500"
        identifiers: "FE1HTMCFM260498"
        manufacturer: "Zendure"
        model: "Ace 1500 Controller"
    - name: "Output Limit"
      unique_id: "C7WUFfnAoutputLimit"
      state_topic: "4bM5kNAf/C7WUFfnA/state"
      value_template: "{{ value_json.outputLimit | int }}"
      unit_of_measurement: "W"
      device: 
        name: "Ace 1500"
        identifiers: "FE1HTMCFM260498"
        manufacturer: "Zendure"
        model: "Ace 1500 Controller"
    - name: "Input Limit"
      unique_id: "C7WUFfnAinputLimit"
      state_topic: "4bM5kNAf/C7WUFfnA/state"
      value_template: >
        {%- if (value_json.inputLimit | is_defined) %}
          {{value_json.inputLimit | int }}
        {%- endif %}
      unit_of_measurement: "W"
      device: 
        name: "Ace 1500"
        identifiers: "FE1HTMCFM260498"
        manufacturer: "Zendure"
        model: "Ace 1500 Controller"
    - name: "Remain Out Time"
      unique_id: "C7WUFfnAremainOutTime"
      state_topic: "4bM5kNAf/C7WUFfnA/state"
      value_template: "{{ value_json.remainOutTime | int }}"
      device_class: "duration"
      unit_of_measurement: "min"
      device: 
        name: "Ace 1500"
        identifiers: "FE1HTMCFM260498"
        manufacturer: "Zendure"
        model: "Ace 1500 Controller"
    - name: "Remain Input Time"
      unique_id: "C7WUFfnAremainInputTime"
      state_topic: "4bM5kNAf/C7WUFfnA/state"
      value_template: "{{ value_json.remainInputTime | int }}"
      device_class: "duration"
      unit_of_measurement: "min"
      device: 
        name: "Ace 1500"
        identifiers: "FE1HTMCFM260498"
        manufacturer: "Zendure"
        model: "Ace 1500 Controller"
    - name: "Pack State"
      unique_id: "C7WUFfnApackState"
      state_topic: "4bM5kNAf/C7WUFfnA/state"
      value_template: "{{ value_json.packState | int }}"
      device: 
        name: "Ace 1500"
        identifiers: "FE1HTMCFM260498"
        manufacturer: "Zendure"
        model: "Ace 1500 Controller"
    - name: "Pack State Description"
      unique_id: "C7WUFfnApackStateDescription"
      state_topic: "4bM5kNAf/C7WUFfnA/state"
      value_template: >
        {% set status = {1:"Charging",2:"Decharging",3:'UPS'} %}
        {% if (value_json.packState | is_defined)%}
          {{status[value_json.packState| int]|d(value_json.packState) }}
        {% endif %}  
    - name: "Pack Num"
      unique_id: "C7WUFfnApackNum"
      state_topic: "4bM5kNAf/C7WUFfnA/state"
      value_template: "{{ value_json.packNum | int }}"
      device: 
        name: "Ace 1500"
        identifiers: "FE1HTMCFM260498"
        manufacturer: "Zendure"
        model: "Ace 1500 Controller"
    - name: "Electric Level"
      unique_id: "C7WUFfnAelectricLevel"
      state_topic: "4bM5kNAf/C7WUFfnA/state"
      unit_of_measurement: "%"
      device_class: "battery"
      value_template: "{{ value_json.electricLevel | int }}"
      device: 
        name: "Ace 1500"
        identifiers: "FE1HTMCFM260498"
        manufacturer: "Zendure"
        model: "Ace 1500 Controller"
    - name: "SOC Set"
      unique_id: "C7WUFfnAsocSet"
      state_topic: "4bM5kNAf/C7WUFfnA/state"
      unit_of_measurement: "%"
      value_template: "{{ value_json.socSet | int / 10 }}"
      device: 
        name: "Ace 1500"
        identifiers: "FE1HTMCFM260498"
        manufacturer: "Zendure"
        model: "Ace 1500 Controller"
    - name: "Pass Mode"
      unique_id: "C7WUFfnApassMode"
      state_topic: "4bM5kNAf/C7WUFfnA/state"
      value_template: "{{ value_json.passMode | int }}"
      device: 
        name: "Ace 1500"
        identifiers: "FE1HTMCFM260498"
        manufacturer: "Zendure"
        model: "Ace 1500 Controller"
    - name: "Batterie 1 maxTemp"
      unique_id: "C7WUFfnABatterie_1_maxTemp"
      state_topic: "4bM5kNAf/C7WUFfnA/state"
      value_template: >
        {% if (value_json.packData | is_defined) %}
          {% for i in value_json.packData %}
            {% if i.sn == "CO4FHMEFM250183" %}
              {{ (i.maxTemp | float - 273.15) | round(2) }}
            {% endif %}
          {% endfor %}
        {% endif %}
      unit_of_measurement: "°C"
      device_class: "temperature"
      device: 
        name: "Ace 1500"
        identifiers: "FE1HTMCFM260498"
        manufacturer: "Zendure"
        model: "Ace 1500 Controller"
    - name: "Batterie 1 maxVol"
      unique_id: "C7WUFfnABatterie_1_maxVol"
      state_topic: "4bM5kNAf/C7WUFfnA/state"
      value_template: >
        {% if (value_json.packData | is_defined) %}
          {% for i in value_json.packData %}
            {% if i.sn == "CO4FHMEFM250183" %}
              {{ i.maxVol | float / 100 }}
            {% endif %}
          {% endfor %}
        {% endif %}
      unit_of_measurement: "V"
      device_class: "voltage"
      device: 
        name: "Ace 1500"
        identifiers: "FE1HTMCFM260498"
        manufacturer: "Zendure"
        model: "Ace 1500 Controller"
    - name: "Batterie 1 minVol"
      unique_id: "C7WUFfnABatterie_1_minVol"
      state_topic: "4bM5kNAf/C7WUFfnA/state"
      value_template: >
        {% if (value_json.packData | is_defined) %}
          {% for i in value_json.packData %}
            {% if i.sn == "CO4FHMEFM250183" %}
              {{ i.minVol | float / 100 }}
            {% endif %}
          {% endfor %}
        {% endif %}
      unit_of_measurement: "V"
      device_class: "voltage"
      device: 
        name: "Ace 1500"
        identifiers: "FE1HTMCFM260498"
        manufacturer: "Zendure"
        model: "Ace 1500 Controller"
    - name: "Batterie 1 socLevel"
      unique_id: "C7WUFfnABatterie_1_socLevel"
      state_topic: "4bM5kNAf/C7WUFfnA/state"
      value_template: >
        {% if (value_json.packData | is_defined) %}
          {% for i in value_json.packData %}
            {% if i.sn == "CO4FHMEFM250183" %}
              {{ i.socLevel | int }}
            {% endif %}
          {% endfor %}
        {% endif %}
      unit_of_measurement: "%"
      device_class: "battery"
      device: 
        name: "Ace 1500"
        identifiers: "FE1HTMCFM260498"
        manufacturer: "Zendure"
        model: "Ace 1500 Controller"
    - name: "Batterie 2 maxTemp"
      unique_id: "C7WUFfnABatterie_2_maxTemp"
      state_topic: "4bM5kNAf/C7WUFfnA/state"
      value_template: >
        {% if (value_json.packData | is_defined) %}
          {% for i in value_json.packData %}
            {% if i.sn == "CO4FHMEFM250347" %}
              {{ (i.maxTemp | float - 273.15) | round(2) }}
            {% endif %}
          {% endfor %}
        {% endif %}
      unit_of_measurement: "°C"
      device_class: "temperature"
      device: 
        name: "Ace 1500"
        identifiers: "FE1HTMCFM260498"
        manufacturer: "Zendure"
        model: "Ace 1500 Controller"
    - name: "Batterie 2 maxVol"
      unique_id: "C7WUFfnABatterie_2_maxVol"
      state_topic: "4bM5kNAf/C7WUFfnA/state"
      value_template: >
        {% if (value_json.packData | is_defined) %}
          {% for i in value_json.packData %}
            {% if i.sn == "CO4FHMEFM250347" %}
              {{ i.maxVol | float / 100 }}
            {% endif %}
          {% endfor %}
        {% endif %}
      unit_of_measurement: "V"
      device_class: "voltage"
      device: 
        name: "Ace 1500"
        identifiers: "FE1HTMCFM260498"
        manufacturer: "Zendure"
        model: "Ace 1500 Controller"
    - name: "Batterie 2 minVol"
      unique_id: "C7WUFfnABatterie_2_minVol"
      state_topic: "4bM5kNAf/C7WUFfnA/state"
      value_template: >
        {% if (value_json.packData | is_defined) %}
          {% for i in value_json.packData %}
            {% if i.sn == "CO4FHMEFM250347" %}
              {{ i.minVol | float / 100 }}
            {% endif %}
          {% endfor %}
        {% endif %}
      unit_of_measurement: "V"
      device_class: "voltage"
      device: 
        name: "Ace 1500"
        identifiers: "FE1HTMCFM260498"
        manufacturer: "Zendure"
        model: "Ace 1500 Controller"
    - name: "Batterie 2 socLevel"
      unique_id: "C7WUFfnABatterie_2_socLevel"
      state_topic: "4bM5kNAf/C7WUFfnA/state"
      value_template: >
        {% if (value_json.packData | is_defined) %}
          {% for i in value_json.packData %}
            {% if i.sn == "CO4FHMEFM250347" %}
              {{ i.socLevel | int }}
            {% endif %}
          {% endfor %}
        {% endif %}
      unit_of_measurement: "%"
      device_class: "battery"
      device: 
        name: "Ace 1500"
        identifiers: "FE1HTMCFM260498"
        manufacturer: "Zendure"
        model: "Ace 1500 Controller"
    - name: "Grid Input Power"
      unique_id: "C7WUFfnAgridInputPower"
      state_topic: "4bM5kNAf/C7WUFfnA/state"
      value_template: > 
        {% if (value_json.electricLevel | is_defined) or (value_json.gridInputPower | is_defined) %}
          {{value_json.gridInputPower | d(0) | int }}
        {% endif %}
      unit_of_measurement: "W"
      device_class: "power"
      state_class: "measurement"
      device: 
        name: "Ace 1500"
        identifiers: "FE1HTMCFM260498"
        manufacturer: "Zendure"
        model: "Ace 1500 Controller"    
    - name: "AC Output Power"
      unique_id: "C7WUFfnAacOutputPower"
      state_topic: "4bM5kNAf/C7WUFfnA/state"
      value_template: > 
        {% if (value_json.acOutputPower | is_defined) %}
          {{value_json.acOutputPower | d(0) | int }}
        {% endif %}
      unit_of_measurement: "W"
      device_class: "power"
      state_class: "measurement"
      device: 
        name: "Ace 1500"
        identifiers: "FE1HTMCFM260498"
        manufacturer: "Zendure"
        model: "Ace 1500 Controller"
    - name: "DC Output Power"
      unique_id: "C7WUFfnAdcOutputPower"
      state_topic: "4bM5kNAf/C7WUFfnA/state"
      value_template: "{{ value_json.OutputPower | int }}"
      unit_of_measurement: "W"
      device_class: "power"
      state_class: "measurement"
      device: 
        name: "Ace 1500"
        identifiers: "FE1HTMCFM260498"
        manufacturer: "Zendure"
        model: "Ace 1500 Controller"

      device: 
        name: "Ace 1500"
        identifiers: "FE1HTMCFM260498"
        manufacturer: "Zendure"
        model: "Ace 1500 Controller"
  switch:
    - name: "Master Switch"
      unique_id: "C7WUFfnAmasterSwitch"
      state_topic: "4bM5kNAf/C7WUFfnA/state"
      state_off: false
      command_topic: "4bM5kNAf/C7WUFfnA/masterSwitch/set"
      device_class: "switch"
      value_template: "{{ value_json.masterSwitch | default('') }}"
      payload_on: true
      payload_off: false
      state_on: true
      device: 
        name: "Ace 1500"
        identifiers: "FE1HTMCFM260498"
        manufacturer: "Zendure"
        model: "Ace 1500 Controller"
    - name: "Buzzer Switch"
      unique_id: "C7WUFfnAbuzzerSwitch"
      state_topic: "4bM5kNAf/C7WUFfnA/state"
      state_off: false
      command_topic: "4bM5kNAf/C7WUFfnA/buzzerSwitch/set"
      device_class: "switch"
      value_template: "{{ value_json.buzzerSwitch | default('') }}"
      payload_on: true
      payload_off: false
      state_on: true
      device: 
        name: "Ace 1500"
        identifiers: "FE1HTMCFM260498"
        manufacturer: "Zendure"
        model: "Ace 1500 Controller"
    - name: "Auto Recover"
      unique_id: "C7WUFfnAautoRevover"
      state_topic: "4bM5kNAf/C7WUFfnA/state"
      state_off: false
      command_topic: "4bM5kNAf/C7WUFfnA/autoRevover/set"
      device_class: "switch"
      value_template: "{{ value_json.autoRevover | default('') }}"
      payload_on: true
      payload_off: false
      state_on: true
      device: 
        name: "Ace 1500"
        identifiers: "FE1HTMCFM260498"
        manufacturer: "Zendure"
        model: "Ace 1500 Controller"
    # To be added to the other switches
    - name: "AC Switch"
      unique_id: "C7WUFfnAacSwitch"
      state_topic: "4bM5kNAf/C7WUFfnA/state"
      state_off: 0
      command_topic: "4bM5kNAf/C7WUFfnA/acSwitch/set"
      device_class: "switch"
      value_template: "{{ value_json.acSwitch | default('') }}"
      payload_on: true
      payload_off: false
      state_on: 1
      device: 
        name: "Ace 1500"
        identifiers: "FE1HTMCFM260498"
        manufacturer: "Zendure"
        model: "Ace 1500 Controller"
    - name: "DC Switch"
      unique_id: "C7WUFfnAdcSwitch"
      state_topic: "4bM5kNAf/C7WUFfnA/state"
      state_off: 0
      command_topic: "4bM5kNAf/C7WUFfnA/dcSwitch/set"
      device_class: "switch"
      value_template: "{{ value_json.dcSwitch | default('') }}"
      payload_on: 1
      payload_off: 0
      state_on: 1
      device: 
        name: "Ace 1500"
        identifiers: "FE1HTMCFM260498"
        manufacturer: "Zendure"
        model: "Ace 1500 Controller"
  number:
    - name: "Input Limit"
      unique_id: "C7WUFfnAinputLimit"
      state_topic: "4bM5kNAf/C7WUFfnA/state"
      value_template: >
        {%- if (value_json.inputLimit | is_defined) %}
          {{value_json.inputLimit | int }}
        {%- endif %}
      unit_of_measurement: "W"
      command_topic: "4bM5kNAf/C7WUFfnA/inputLimit/set"
      device_class: power
      entity_category: config
      min: 0
      max: 900
      device: 
        name: "Ace 1500"
        identifiers: "FE1HTMCFM260498"
        manufacturer: "Zendure"
        model: "Ace 1500 Controller"

automation:
###############################################
- id: Zendur_batterie_low
  alias: Integration - Zendure - Low Batterie
  description: ""
  mode: single
  triggers:
    - trigger: numeric_state
      entity_id:
        - sensor.electriclevel
      below: 20
      id: bellow20
    - trigger: numeric_state
      entity_id:
        - sensor.electriclevel
      below: 10
      id: bellow10
  conditions: []
  actions:
    - if:
        - condition: state
          entity_id: switch.power_plug_ups_garage_prise_onduleur_garage
          state: "off"
      then:
        - action: switch.turn_on
          metadata: {}
          data: {}
          target:
            entity_id: switch.power_plug_ups_garage_prise_onduleur_garage
      else:
        - action: notify.all_mobile
          metadata: {}
          data:
            message: Niveau batterie garage faible ({{states('sensor.electriclevel')}}%)


