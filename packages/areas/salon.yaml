binary_sensor:
  - platform: group
    name: "Capteurs mouvement salon"
    device_class: occupancy
    unique_id: salon_motion_sensors
    all: false
    entities:
      - binary_sensor.salon_capteur_mouvement_occupancy
      - binary_sensor.salon_capteur_presence_presence
      - binary_sensor.bibliotheque_person_occupancy
      - binary_sensor.livingroom_presence_sensor_presence

light:
  - platform: group
    unique_id: salon_lumieres
    name: Salon lumieres
    entities:
      - light.salon
      - light.led_bibliotheque
  
sensor:
  - platform: history_stats
    name: Durée Tv aujourd'hui
    entity_id: media_player.tv01
    state: "on"
    type: time
    start: "{{ now().replace(hour=6, minute=0, second=0) }}"
    end: "{{ now().replace(hour=21, minute=0, second=0) }}"
  - platform: history_stats
    name: Durée Apple Tv aujourd'hui
    entity_id: media_player.apple_tv_salon
    state: "playing"
    type: time
    start: "{{ now().replace(hour=6, minute=0, second=0) }}"
    end: "{{ now().replace(hour=21, minute=0, second=0) }}"

  - name: mouvement_salon_5min
    platform: history_stats
    entity_id: binary_sensor.capteurs_mouvement_salon
    state: "on"
    type: time
    duration: 00:05:00
    end: "{{now()}}"

automation:
################################################################################
- id: 'salon_light_auto'
  alias: Area - Salon - Lumière auto
  description: ''
  use_blueprint:
    path: antorfr/motion_light.yaml
    input:
      light_target:
        entity_id: light.salon_lumieres
      motion_sensor: binary_sensor.capteurs_mouvement_salon
      no_motion_wait:
        minutes: 10
      no_motion_warning: 30
      light_sensor: sensor.salon_capteur_luminosite_illuminance_lux
      lux_cutoff: 80
      lux_sun_cutoff: 200
      adaptive_lighting: switch.adaptive_lighting_salon
      only_during_night: false
      kill_switch: input_boolean.salon_lumiere_mode_tv
################################################################################
- id: 'salon_bouton_light'
  alias: Area - Salon - Bouton Lumière
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: 19daa3eaef6aa64f927feeb5d8a47dc4
    type: action
    subtype: left_press
    discovery_id: 0x001788010b01dcce action_left_press
    id: left_press
  - platform: device
    domain: mqtt
    device_id: 19daa3eaef6aa64f927feeb5d8a47dc4
    type: action
    subtype: right_press
    discovery_id: 0x001788010b01dcce action_right_press
    id: right_press
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: left_press
      sequence:
      - service: light.toggle
        data: {}
        target:
          entity_id: light.led_bibliotheque
    - conditions:
      - condition: trigger
        id: right_press
      sequence:
      - service: light.toggle
        data: {}
        target:
          entity_id: light.salon
    default: []
  mode: parallel
################################################################################
- id: 'salon_mode_TV_auto'
  alias: Area - Salon - Lumière mode TV On/Off
  mode: single
  trigger:
    - platform: state
      entity_id:
        - media_player.tv01
      to: "on"
      id: "on"
    - platform: state
      entity_id:
        - media_player.tv01
      to: "off"
      id: "off"
  condition: []
  action:
    - if:
        - condition: trigger
          id: "on"
      then:
        - service: input_boolean.turn_on
          data: {}
          target:
            entity_id: input_boolean.salon_lumiere_mode_tv
      else:
        - service: input_boolean.turn_off
          data: {}
          target:
            entity_id: input_boolean.salon_lumiere_mode_tv
################################################################################
- id: 'salon_bouton_telecommande'
  alias: Area - Salon - Telecommande 
  description: ""
  mode: single
  trigger:
    - platform: device
      domain: mqtt
      device_id: 4ea8e4d68946d72103f54aa45e3bbc0f
      type: action
      subtype: button_1_single
      discovery_id: 0x04cf8cdf3c7dc822 action_button_1_single
      id: button_1_single
    - platform: device
      domain: mqtt
      device_id: 4ea8e4d68946d72103f54aa45e3bbc0f
      type: action
      subtype: button_2_single
      discovery_id: 0x04cf8cdf3c7dc822 action_button_2_single
      id: button_2_single
    - platform: device
      domain: mqtt
      device_id: 4ea8e4d68946d72103f54aa45e3bbc0f
      type: action
      subtype: button_3_single
      discovery_id: 0x04cf8cdf3c7dc822 action_button_3_single
      id: button_3_single
    - platform: device
      domain: mqtt
      device_id: 4ea8e4d68946d72103f54aa45e3bbc0f
      type: action
      subtype: button_4_single
      discovery_id: 0x04cf8cdf3c7dc822 action_button_4_single
      id: button_4_single
    - platform: device
      domain: mqtt
      device_id: 4ea8e4d68946d72103f54aa45e3bbc0f
      type: action
      subtype: button_5_single
      discovery_id: 0x04cf8cdf3c7dc822 action_button_5_single
      id: button_5_single
    - platform: device
      domain: mqtt
      device_id: 4ea8e4d68946d72103f54aa45e3bbc0f
      type: action
      subtype: button_6_single
      discovery_id: 0x04cf8cdf3c7dc822 action_button_6_single
      id: button_6_single
  condition: []
  action:
    - choose:
        - conditions:
          - condition: trigger
            id: button_1_single
          sequence:
          - service: light.toggle
            data: {}
            target:
              entity_id: light.led_bibliotheque
        - conditions:
          - condition: trigger
            id: button_2_single
          sequence:
          - service: light.toggle
            data: {}
            target:
              entity_id: light.salon
        - conditions:
          - condition: trigger
            id: button_3_single
          sequence:
          - service: script.play_mood_music
            data:
              rooms:
                - Rdc
            target: {}
        - conditions:
          - condition: trigger
            id: button_4_single
          sequence:
          - service: script.play_mood_music
            data:
              action: play_pause
              rooms:
                - Rdc
              
            target: {}
        - conditions:
          - condition: trigger
            id: button_5_single
          sequence:
            - if:
                - condition: state
                  entity_id: vacuum.roborock_s7
                  state: cleaning
              then:
                - service: vacuum.return_to_base
                  target:
                    entity_id: vacuum.roborock_s7
              else:
                - service: vacuum.send_command
                  data:
                    command: app_segment_clean
                    params:
                      - segments: [17,22]
                  target:
                    entity_id: vacuum.roborock_s7
        - conditions:
          - condition: trigger
            id: button_6_single
          sequence:
            - service: script.lunchtime
            
################################################################################
- id: 'salon_bouton_volume'
  alias: Area - Salon - Bouton volume
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: 3bb5ed9c9e9e2edd6ae8fcb01e447fa0
    type: action
    subtype: brightness_move_up
    discovery_id: 0xec1bbdfffef3f050 action_brightness_move_up
    id: move_up
  - platform: device
    domain: mqtt
    device_id: 3bb5ed9c9e9e2edd6ae8fcb01e447fa0
    type: action
    subtype: brightness_move_down
    discovery_id: 0xec1bbdfffef3f050 action_brightness_move_down
    id: move_down
  - platform: device
    domain: mqtt
    device_id: 3bb5ed9c9e9e2edd6ae8fcb01e447fa0
    type: action
    subtype: toggle
    discovery_id: 0xec1bbdfffef3f050 action_toggle
    id: toggle
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: move_up
      sequence:
      - service: media_player.volume_up
        data: {}
        target:
          entity_id: media_player.salon
    - conditions:
      - condition: trigger
        id: move_down
      sequence:
      - service: media_player.volume_down
        data: {}
        target:
          entity_id: media_player.salon
    - conditions:
      - condition: trigger
        id: toggle
      sequence:
      - service: media_player.media_play_pause
        data: {}
        target:
          entity_id: media_player.salon
    default: []

#########################################
homeassistant:
  customize:
   binary_sensor.capteurs_mouvement_salon:
      room_main: occupancy
