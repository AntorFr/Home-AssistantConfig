script:
###############################################
  light_notify_red_alarm:
    alias: "Light Notify - Alarm"
    mode: parallel
    icon: mdi:alarm-light-outline
    fields:
      light_entities:
        name: Light entities
        description: List en light entities to be used
        required: true
    sequence:
      - service: light.turn_on
        data:
          color_name: red
          effect: breathe
          brightness_pct: 100
        target:
          entity_id: "{{light_entities}}"
      - service: number.set_value
        data:
          value: 60
        target:
          entity_id: >-
            {%- set ns = namespace(speed_entities=[]) %}

            {%- if light_entities is not none %}
              {%- set light_entities = iif(light_entities is string,[light_entities],light_entities) %}
              {%- for light_entity in light_entities %}
                {%- set speed_entitiy = device_entities(device_id(light_entity))|select('match','^number\..*')|list %}
                {%- set ns.speed_entities =  (ns.speed_entities+speed_entitiy)|unique|list%}
              {%- endfor %}
            {%- endif %}
            {{ns.speed_entities}}
###############################################
  light_notify_stop:
    alias: "Light Notify - Stop"
    icon: mdi:alarm-light-off-outline
    mode: parallel
    sequence:
      - service: light.turn_off
        target:
          entity_id: "{{light_entities}}"
###############################################