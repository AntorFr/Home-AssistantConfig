sql:
  - name: Music Library
    unique_id: music_library
    db_url: !secret budibase_db 
    query: >
      SELECT
        count(*) as count,
        json_agg(music_inventory) as inventory,
        json_agg(title) as list
      FROM
        music_inventory;
    column: "count"

template:
 - select:
    - name: "Playlist"
      unique_id: playlist
      state: " "
      select_option: []
      options: >
        {{ [" "] + state_attr('sensor.music_library', 'list') }}
      optimistic: true
      icon: mdi:playlist-music

intent_script:
###############################################################################
  MusicTurnOn:
    async_action: false
    speech:
      text: "Ok, j'ai lancé la musique {{ ' dans ' if area|length > 0}}{{area}}" #{{response.playlist}} 
    action:
      - alias: "select zone"
        variables:
          zone: >
            {% from 'room_functions.jinja' import area_identifiers %}
            {%-if area is undefined -%}
            RdC
            {%-else -%}
              {%-if area in area_identifiers(["salon","salle_a_manger"]) | from_json -%}
                RdC
              {%-else -%}
                {{area}}
              {%-endif -%}
            {%-endif -%}
      - service: script.play_mood_music
        data:
          rooms: "{{zone}}"
          action: play_media
        response_variable: response
################################################################################
  MusicTurnOff:
    async_action: false
    speech:
      text: "Ok, j'ai arreté la musique {{ ' dans ' if area|length > 0}}{{area}}" #{{response.playlist}} 
    action:
      - alias: "select zone"
        variables:
          zone: >
            {% from 'room_functions.jinja' import area_identifiers %}
            {%-if area is undefined -%}
            RdC
            {%-else -%}
              {%-if area in area_identifiers(["salon","salle_a_manger"]) | from_json -%}
                RdC
              {%-else -%}
                {{area}}
              {%-endif -%}
            {%-endif -%}
      - service: script.play_mood_music
        data:
          rooms: "{{zone}}"
          action: media_stop
        response_variable: response
################################################################################


script:  
################################################################################
  play_music:
    alias: "Function - Music manager - Play the right playlist"
    mode: parallel

    fields:
      media_player:
        name: Enceinte
        required: True
        selector: 
          entity:
            multiple: true
            filter:
              - domain: media_player
      style:
        name: style
        required: False
        selector: 
          select:
            options: ['motivation','chill','work','zen','histoire']
      public:
        name: public
        required: False
        selector: 
          select:
            options: ['Famille','Sebastien','Laurine','Timothee','Emilie']
      title:
        name: titre
        required: False
        selector:
          text:
      
    variables:
      playlists: "{{state_attr('sensor.music_library', 'inventory')  |to_json(ensure_ascii=True)}}"
      input_playlist: "{{states('select.playlist')}}"
      reset_playlist: >
        {%- if ((title is not defined) or (title is none)  or (title == '')) 
            and (not is_state('select.playlist', ' ')) -%}
          True
        {%- else -%}
          False
        {%- endif -%} 
      selected_playlists: >          
        {%- set ns = namespace(selected_playlists=[]) %}

        {# set to None if not defined or empty #}
        {% if (style is not defined) or (style == '') %}
          {% set style = None %}
        {% endif %}
        {% if (public is not defined) or (public == '')%}
          {% set public = None %}
        {% endif %}
        {% if (title is not defined) or (title == '')%}
          {% set title = None %}
        {% endif %}

        {% if (reset_playlist)%}
          {% set title = input_playlist %}
        {% endif %}

        {%for playlist in playlists%}
          {% if (title is not none and title==playlist.title)%}
            {%- set ns.selected_playlists = ns.selected_playlists + [playlist] %}
          {% elif (style is none or style in playlist.style)
              and (public is none or public in playlist.public)
              and (title is none) %}
            {%- set ns.selected_playlists = ns.selected_playlists + [playlist] %}
          {% endif %}
        {% endfor  %}

        {{ns.selected_playlists |to_json(ensure_ascii=True)}}         
      random_playlist: >
        {%if selected_playlists|length > 0 %}
          {{selected_playlists|random |to_json(ensure_ascii=True)}}
        {% endif %}

    sequence:
      - if:
          - condition: template
            value_template: "{{reset_playlist}}"
        then:
          - service: select.select_option
            data:
              option: " "
            target:
              entity_id: select.playlist 
      - if:
          - condition: template
            value_template: "{{ random_playlist is not mapping  }}"
        then:
          - stop: "Aucune playlist trouvée"
            error: true
      - service: media_player.play_media
        target:
          entity_id: "{{ media_player }}"
        data:
          media_content_id: "{{ random_playlist.content_id }}"
          media_content_type: "{{ random_playlist.content_type }}"
          enqueue: replace
      - variables:
          response:
            playlist: "{{random_playlist.title}}"
            player: "{{expand(media_player)|map(attribute='name')| list }}"
            message: >
              {% if media_player is string %}
                {% set media_player = [media_player]%}
              {%endif%}
              playlist {{random_playlist.title}} lancée sur {{expand(media_player)|map(attribute="name")|join(', ')}}
            room: >
              {% if (media_player is not string) and (media_player is iterable) %}
                {% set media_player = media_player | first %}
              {%endif%}
              {{area_id(media_player)}}
      - service: script.room_tts_notify
        data:
          room: "{{response.room}}"
          message: "{{response.message}}"
      - stop: "Playlist launched"
        response_variable: response

################################################################################
  play_mood_music:
    alias: "Function - Music manager - Guess what to play"
    icon: mdi:speaker-multiple
    variables:
      zone_ids:
        rdc:
          - 'salon'
          - 'salle_a_manger'
          - 'cuisine'
    fields:
      rooms:
        name: zone de lecture
        required: False
        selector: 
          area:
            multiple: true
            device:
              - integration: sonos

      title:
        name: titre
        required: False
        selector:
          text:  

      action:
        name: action
        required: True
        default: play_media
        selector:
          select:
            options:
              - play_media
              - media_stop
              - play_stop #refresh what to play if nothing playing
              - media_play
              - media_pause     
              - play_pause # media_play rather than play_media
    
    sequence:
      - variables:
          rooms: >
            {% from 'room_functions.jinja' import all_area_identifiers, area_ids %}

            {%- set ns = namespace(zone=[]) %}

            {% if (rooms is none) or (rooms == '')%}
              {%- set rooms = [] -%}
            {%- elif rooms is string  -%}
              {%- set rooms = [rooms] -%}
            {% endif %}

            {%- for room in rooms -%}
              {%- if (room |lower) in zone_ids -%}
                {%- set ns.zone = ns.zone + zone_ids[(room |lower)] -%}
              {%- endif -%}
            {%- endfor -%}

            {%- set rooms =  area_ids(
                              (ns.zone + rooms)
                              | unique
                              | select ("in",all_area_identifiers()|from_json) 
                              |list) -%}

            {{rooms}}
          media_players: > 
            {%- from 'music_functions.jinja' import sonos_in_area, sonos_not_playing_tv -%}
            {{sonos_not_playing_tv(sonos_in_area(rooms)|from_json)|from_json }}
          media_player_id: "{{ media_players | first }}"
          group_members: "{{ media_players | reject('eq', media_player_id) | list }}"            
          public: >
            {%if title is defined%}
            {%elif rooms == ['bureau'] %}
              {% if (is_state('person.sebastien','home')) %}
              Sebastien
              {% elif (is_state('person.laurine','home')) %}
              Laurine
              {%endif%}
            {%elif rooms == ['chambre_timothee'] %}
              Timothee
            {%elif rooms == ['chambre_emilie'] %}
              Emilie
            {%else %}
              {% if (is_state('person.sebastien','home') 
                and is_state('person.laurine','home')) %}
              Famille
              {% elif (is_state('person.sebastien','home')) %}
              Sebastien
              {% elif (is_state('person.laurine','home')) %}
              Laurine
              {%endif%}             
            {% endif %}
          style: >
            {% if (title is none) or (title == '')%}
              {% set title = null %}
            {% endif %}

            {%if title is defined%}
            {%elif rooms == ['bureau'] %}
              {% if (now().hour <= 9) %}
                zen
              {% elif is_state('binary_sensor.workday_sensor','on') 
                  and now().hour <= 19  %}
                work
              {% elif now().hour <= 10 %}
                chill
              {% elif now() <= today_at(states('input_datetime.'+iif(is_state('binary_sensor.workday_tomorrow','on'),'children_night_time','children_night_time_we')))  %}
                motivation
              {% else %}
                zen
              {%endif %}
            {%else %}
              {% if (now().hour <= 9) %}
                zen
              {% elif (now().hour <= 10) %}
                chill
              {% elif now() <= today_at(states('input_datetime.'+iif(is_state('binary_sensor.workday_tomorrow','on'),'children_night_time','children_night_time_we'))) %}
                motivation
              {% else %}
                zen
              {%endif %}
            {% endif %}
          any_playing: >
            {{(expand(media_players) | selectattr("state", "==", "playing") | list | count) > 0}}
          action: >
            {%- if ((action is not defined) or (action is none)  or (action == '')) -%}
              play_media
            {%- else -%}
              {{action}}
            {%- endif -%}

      - alias: "play_media"
        if:
        - condition: template
          value_template: >
             {{action == "play_media"
                or (action == "play_stop" and not any_playing ) }}
        then:
          - alias: "more than one player, create a groupe" 
            if:
              - condition: template
                value_template: '{{ media_players | count > 1 }}'
            then:
              - service: media_player.join
                enabled: true ## Debug > To remove
                target:
                  entity_id: > 
                    {{media_player_id}}
                data:
                  group_members: >
                    {{group_members}}
          - service: script.play_music
            enabled: true ## Debug > To remove
            data:
              media_player: "{{media_player_id}}"
              style: "{{style}}"
              public: "{{public}}"
              title: "{{title}}"
            response_variable: response
          - stop: "Playlist launched"
            enabled: true
            response_variable: response
      - alias: "stop" #stop
        if:
        - condition: template
          value_template: >
             {{action == "media_stop" or 
             (action == "play_stop" and any_playing) }}
        then: 
          - service: media_player.media_stop
            enabled: true ## Debug > To remove
            target:
              entity_id: > 
                {%- from 'music_functions.jinja' import media_player_get_masters -%}
                {{media_player_get_masters(media_players)|from_json }}
      - alias: "media_play" 
        if:
        - condition: template
          value_template: >
             {{action == "media_play" or 
             (action == "play_pause" and not any_playing) }}
        then: 
          - service: media_player.media_play
            enabled: true ## Debug > To remove
            target:
              entity_id: > 
                {%- from 'music_functions.jinja' import media_player_get_masters -%}
                {{media_player_get_masters(media_players)|from_json }}
      - alias: "pause" 
        if:
        - condition: template
          value_template: >
             {{action == "media_pause" or 
             (action == "play_pause" and any_playing) }}
        then: 
          - service: media_player.media_pause
            enabled: true ## Debug > To remove
            target:
              entity_id: > 
                {%- from 'music_functions.jinja' import media_player_get_masters -%}
                {{media_player_get_masters(media_players)|from_json }}


automation:
################################################################################
- id: handle_tag_scan
  alias: "Function - Music manager - Handle Tag Scan"
  mode: single
  # Hide warnings when triggered while in delay.
  max_exceeded: silent
  variables:
    # Map scanner device ID to media player entity ID
    media_players:
      fa37e0c36e836c9a3fa47145157df38f: media_player.emilie
      7b6a7b292afbcb0ad93f19416ce95b43: media_player.timothee

    playlists: "{{state_attr('input_select.playlist','playlists') |to_json(ensure_ascii=True)}}"
    tags: >
      {%- set ns = namespace(tags=[]) %}
      {%- for tag in (playlists|map(attribute="tags")|list) %}
        {% if (tag|length > 0)%}
          {%- set ns.tags = ns.tags + tag%}
        {% endif %}
      {%endfor%}
      {{ns.tags|unique|list|to_json(ensure_ascii=True)}} 
  trigger:
    platform: event
    event_type: tag_scanned
  condition:
    # Test that we support this device and tag
    - "{{ trigger.event.data.tag_id in tags }}"
    - "{{ trigger.event.data.device_id in media_players }}"
  action:
    - variables:
        tag: "{{ trigger.event.data.tag_id}}"
        selected_playlist: >
          {%- set ns = namespace(selected_playlists=[]) %}
          {%for playlist in playlists%}
            {% if (tag is not none and tag in playlist.tags)%}
              {%- set ns.selected_playlists = ns.selected_playlists + [playlist] %}
            {% endif %}
          {% endfor  %}
          {{ns.selected_playlists|first|to_json(ensure_ascii=True)}} 

        media_player_entity_id: "{{ media_players[trigger.event.data.device_id] }}"
        media_content_id: "{{ selected_playlist.content_id }}"
        media_content_type: "{{ selected_playlist.content_type }}"
    - service: media_player.play_media
      target:
        entity_id: "{{ media_player_entity_id }}"
      data:
        media_content_id: "{{ media_content_id }}"
        media_content_type: "{{ media_content_type }}"
        enqueue: replace
    - service: media_player.shuffle_set
      data:
        shuffle: true
      target:
        entity_id: "{{ media_player_entity_id }}"
    - delay: 2 # timeout before we allow processing next scan

################################################################################
- id: handle_tag_scan_new
  alias: "Function - Music manager - Handle Tag Scan 2"
  mode: single
  # Hide warnings when triggered while in delay.
  max_exceeded: silent
  variables:
    # Map scanner device ID to media player entity ID
    media_players:
      fa37e0c36e836c9a3fa47145157df38f: media_player.emilie_5
      7b6a7b292afbcb0ad93f19416ce95b43: media_player.timothee_3

    tags:
      53-EF-D6-D7-60-00-01: "Harry Potter à l'École des Sorciers"
        
  trigger:
    platform: event
    event_type: tag_scanned
  condition:
    # Test that we support this device and tag
    - "{{ trigger.event.data.tag_id in tags }}"
    - "{{ trigger.event.data.device_id in media_players }}"
  action:
    - variables:
        media_player_entity_id: "{{ media_players[trigger.event.data.device_id] }}"
        media_content_id: "{{ tags[trigger.event.data.tag_id] }}"
    - service: music_assistant.play_media
      target:
        entity_id: "{{ media_player_entity_id }}"
      data:
        media_id: "{{ media_content_id }}"
        enqueue: replace
    - delay: 2 # timeout before we allow processing next scan

 ################################################################################          
- id: adapte_volume_salon 
  alias: "Function - Music manager - Adapte volume Salon"
  description: ""
  mode: single
  trigger:
    - platform: state
      entity_id:
        - media_player.salon
      attribute: source
      to: TV
      id: tv
    - platform: state
      entity_id:
        - media_player.salon
      attribute: source
      from: TV
      id: music
  condition: []
  action:
    - choose:
        - conditions:
            - condition: trigger
              id: tv
          sequence:
            - service: media_player.volume_set
              data:
                volume_level: 0.16
              target:
                entity_id: media_player.salon
        - conditions:
            - condition: trigger
              id: music
          sequence:
            - service: media_player.volume_set
              data:
                volume_level: 0.08
              target:
                entity_id: media_player.salon
      default: []

################################################################################
input_select:
  playlist:
    name: Playlist
    options:
        - ' '
      ## Famille ##
        - La vie est belle
        - Feel good acoustic
        - Chilled Classical
        - Peaceful Meditation
        - Ambient Relaxation
        - Sleep
      ## Sebastien ##
        - Malukah
        - Fantasy board gaming
        - Reading Adventure
        - Sith Meditation
        - Star Wars (epic)
        - Sea Song
        - Champs Marin
        - Sport Motivation 2024
      ## Laurine ##
        - Sleepy Ghibli
        - Harry Potter
      ## Enfants ##
        - Millie D
        - Noisette
        - Kidico
        - KidStory
        - Dance Émilie
        - Princess disney france
        - Magic system
        - Petit loup
        - Bulle et Bob
        - Histoire Aldebert
        - Il etait une fois
        - Mortel Adele
        - Planete Alpha
        - Lolirock
        - Histoire d’espace
        - Bestiole
    icon: mdi:playlist-music

homeassistant:
  customize:
    input_select.playlist:
      playlists:
      ## Famille ##
        - title: La vie est belle
          content_id: spotify:playlist:37i9dQZF1DXdrln2UyZD7F
          content_type: playlist
          style: ['motivation']
          public: ['Sebastien', 'Laurine', 'Famille']
          tags: []
        - title: Feel good acoustic
          content_id: spotify:playlist:37i9dQZF1DWXRvPx3nttRN
          content_type: playlist
          style: ['chill']
          public: ['Sebastien', 'Laurine', 'Famille']
          tags: []
        - title: Sport Motivation 2024
          content_id: spotify:playlist:6rkZzuLbq5LbbFl3u0nTxf
          content_type: playlist
          style: ['motivation']
          public: ['Sebastien', 'Famille']
          tags: []
        - title: Chilled Classical
          content_id: spotify:playlist:37i9dQZF1DWUvHZA1zLcjW
          content_type: playlist
          style: ['chill']
          public: ['Sebastien', 'Laurine', 'Famille']
          tags: []
        - title: Peaceful Meditation
          content_id: spotify:playlist:37i9dQZF1DWZqd5JICZI0u
          content_type: playlist
          style: ['zen','work']
          public: ['Sebastien', 'Laurine', 'Famille']
          tags: []
        - title: Ambient Relaxation
          content_id: spotify:playlist:37i9dQZF1DX3Ogo9pFvBkY
          content_type: playlist
          style: ['zen','work']
          public: ['Sebastien', 'Laurine', 'Famille']
          tags: []
        - title: Sleep
          content_id: spotify:playlist:37i9dQZF1DWZd79rJ6a7lp
          content_type: playlist
          style: ['zen','work']
          public: ['Sebastien', 'Laurine', 'Famille']
          tags: []
        - title: Malukah
          content_id: spotify:playlist:5ZLgTnEANdMIgkfsX63Ykv
          content_type: playlist
          style: ['chill','motivation']
          public: ['Sebastien']
          tags: []
        - title: Fantasy board gaming
          content_id: spotify:playlist:37i9dQZF1DWVdDMUimLXxx
          content_type: playlist
          style: ['zen','chill','work']
          public: ['Sebastien']
          tags: []
        - title: Reading Adventure
          content_id: spotify:playlist:37i9dQZF1DWUWUfWSLE7dn
          content_type: playlist
          style: ['zen','chill','work']
          public: ['Sebastien']
          tags: []
        - title: Sith Meditation
          content_id: spotify:playlist:0YCerIiq6AF59sE3NlRPLQ
          content_type: playlist
          style: ['chill','work']
          public: ['Sebastien']
          tags: []
        - title: Star Wars (epic)
          content_id: spotify:playlist:4iHfX38Gd6isG7FoizRTPg
          content_type: playlist
          style: ['chill','work']
          public: ['Sebastien']
          tags: []
        - title: Sea Song
          content_id: spotify:playlist:24f4OwL1tOAyqbRjrpWqhH
          content_type: playlist
          style: ['chill','motivation']
          public: ['Sebastien']
          tags: []
        - title: Champs Marin
          content_id: spotify:playlist:0wR5cFFOx16rfxOVHo4Kdg
          content_type: playlist
          style: ['motivation']
          public: ['Emilie']
          tags: ['CE-E7-4D-3D']
      ## Laurine ##
        - title: Sleepy Ghibli
          content_id: spotify:playlist:14TCh5wWTPpF2C3RuRTPX9
          content_type: playlist
          style: ['zen','work']
          public: ['Laurine', 'Famille']
          tags: []
        - title: Harry Potter
          content_id: spotify:playlist:2nI2TA9KrHvlcrZWH5xPbz
          content_type: playlist
          style: ['zen','work']
          public: ['Laurine']
          tags: []
      ## Enfants ##
        - title: Millie D
          content_id: spotify:show:6xZWDWtjxF6dEV9KZZNRTF
          content_type: playlist
          style: ['histoire']
          public: ['Timothee','Emilie']
          tags: ['F7-E3-4D-3D','01-E6-4D-3D']
        - title: Noisette
          content_id: spotify:show:0cfuaJnYvp6iTwXXOFjt0y
          content_type: playlist
          style: ['histoire']
          public: ['Timothee','Emilie']
          tags: ['DF-E7-4D-3D','08-E4-4D-3D']
        - title: Kidico
          content_id: spotify:show:5no3pub2QBaaaeeBdiobLo
          content_type: playlist
          style: ['histoire']
          public: ['Emilie','Timothee']
          tags: ['C0-E6-4D-3D','10-E4-4D-3D']
        - title: KidStory
          content_id: spotify:show:2OApiYYyIQpZ7VTTPLBp7A
          content_type: playlist
          style: ['histoire']
          public: ['Emilie']
          tags: []
        - title: Dance Émilie
          content_id: spotify:playlist:1OdvIJp6A9yvaFsksZANVj
          content_type: playlist
          style: ['motivation']
          public: ['Emilie']
          tags: ['1A-E5-4D-3D']
        - title: Princess disney france
          content_id: spotify:playlist:6YTRixD9kjc4T9oj0SBNXp
          content_type: playlist
          style: ['chill']
          public: ['Emilie']
          tags: ['F8-E5-4D-3D']
        - title: Magic system
          content_id: spotify:playlist:7aUx9jE0vqYsLFAUIZvkkz
          content_type: playlist
          style: ['motivation']
          public: ['Emilie','Timothee']
          tags: ['00-E4-4D-3D']
        - title: Petit loup
          content_id: spotify:album:3b5RlFQSq0ivPNktaRYa9c
          content_type: playlist
          style: ['histoire']
          public: ['Emilie','Timothee']
          tags: ['09-E6-4D-3D']
        - title: Bulle et Bob
          content_id: spotify:playlist:4Gj26yoPs0XKz1DJ5iT01G
          content_type: playlist
          style: ['histoire']
          public: ['Emilie','Timothee']
          tags: ['30-E5-4D-3D','AF-E6-4D-3D']
        - title: Histoire Aldebert
          content_id: spotify:playlist:3IBqtadarJNvU5FXB0VvhZ
          content_type: playlist
          style: ['histoire']
          public: ['Emilie','Timothee']
        - title: Il etait une fois
          content_id: spotify:playlist:00MqrM9DRedq5S8sZbimva
          content_type: playlist
          style: ['histoire']
          public: ['Emilie','Timothee']
          tags: ['04-7F-D7-DA-B4-49-80','04-8A-D7-DA-B4-49-80']
        - title: Mortel Adele
          content_id: spotify:playlist:5HM0G3ehNa5VQnqbyQorvd
          content_type: playlist
          style: ['histoire']
          public: ['Emilie','Timothee']
          tags: ['04-7A-D7-DA-B4-49-80','04-85-D7-DA-B4-49-80']
        - title: Planete Alpha
          content_id: https://editionsrecrealire.com/img/cms/qrcode/CONTE_PLANETE_ALPHA__AUDIO_MP3_OK.mp3
          content_type: music
          style: ['histoire']
          public: ['Emilie','Timothee']
          tags: ['04-70-D7-DA-B4-49-80','04-75-D7-DA-B4-49-80']
        - title: Lolirock
          content_id: spotify:playlist:3SShFGhkyOSbBscaU8T3kX
          content_type: music
          style: ['motivation']
          public: ['Emilie','Timothee']
          tags: ['53-1D-CC-D6-60-00-01','53-22-C7-D6-60-00-01']
        - title: "Histoire d’espace"
          content_id: spotify:playlist:2L19u0cpg3cFqn8SwQM2MQ
          content_type: music
          style: ['histoire']
          public: ['Timothee']
        - title: "Les Bestioles fossiles"
          content_id: spotify:playlist:0OHK3pGkkwIY8WNzZ3op6v
          content_type: music
          style: ['histoire']
          public: ['Emilie','Timothee']